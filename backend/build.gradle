apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'war'

import org.apache.tools.ant.taskdefs.condition.Os

project.ext {
    scalaBinary = project.hasProperty('scalaBinary') ? project.getProperty('scalaBinary') : '2.11'
    scalaVersion = project.hasProperty('scalaVersion') ? project.getProperty('scalaVersion') : '2.11.6'
    scalatraVersion = '2.3.1'
    javaVersion = scalaBinary == '2.11' ? '1.8' : '1.7'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        os = 'windows-x86_64'
    } else {
        os = 'linux-x86_64'
    }
    println('Scala Binary: ' + scalaBinary + ' - Scala Version: ' + scalaVersion + ' - Java: ' + javaVersion)
}

configurations.all {
    resolutionStrategy {
        // See reason: http://stackoverflow.com/a/23870656/992426
        force 'xml-apis:xml-apis:1.4.01'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

compileScala {
    scalaCompileOptions.useCompileDaemon = true
}


war {
    dependsOn ':frontend:bundle'
    from(project.rootDir.absolutePath + '/backend/db') {
        include 'rms.mv.db'
        into('db')
    }
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
    sourceCompatibility = project.javaVersion
    targetCompatibility = project.javaVersion
}

mainClassName = 'JettyLauncher'

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.scalatest:scalatest_' + project.scalaBinary + ':3.0.0-M7'
    compile(group: 'org.scala-lang', name: 'scala-library', version: project.scalaVersion) { force = true }
    compile(group: 'org.scala-lang', name: 'scala-compiler', version: project.scalaVersion) { force = true }
    compile(group: 'org.scala-lang', name: 'scala-reflect', version: project.scalaVersion) { force = true }
    compile('org.scala-lang:scalap:' + project.scalaVersion)
    compile('org.scala-lang.modules:scala-parser-combinators_2.11:1.0.4')

    // Web server
    compile('org.scalatra:scalatra_2.11:' + project.scalatraVersion)
    compile('org.scalatra:scalatra-scalate_2.11:' + project.scalatraVersion)
    compile('org.scalatra.scalate:scalate-core_2.11:1.7.0')
    compile('org.scalatra:scalatra-json_2.11:' + project.scalatraVersion)
    compile('org.scalatra:scalatra-auth_2.11:' + project.scalatraVersion)

    compile(group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0') { force = true }
    compile(group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.3.11.v20160721')


    compile('ch.qos.logback:logback-classic:1.1.2')
    compile('com.typesafe.slick:slick_2.11:3.1.1')
    compile('com.typesafe:config:1.3.0')
    compile('com.h2database:h2:1.4.190')
    compile('org.json4s:json4s-jackson_2.11:3.3.0.RC3')
    compile('org.json4s:json4s-native_2.11:3.3.0.RC3')
    compile('com.mchange:c3p0:0.9.5.1')

    // Image processing
    compile('com.sksamuel.scrimage:scrimage-core_2.11:2.0.1')
    compile('com.sksamuel.scrimage:scrimage-io_2.11:2.0.1')
    compile('com.sksamuel.scrimage:scrimage-filters_2.11:2.0.1')

    compile('org.apache.xmlgraphics:batik-codec:1.7')
    compile('me.lessis:courier_2.11:0.1.3')
    compile('com.dropbox.core:dropbox-core-sdk:1.7.7')
    compile('org.scalatest:scalatest_2.11:3.0.0-M7')
}
